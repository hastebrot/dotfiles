# username and email.

[user]
    name = Benjamin Gudehus
    email = hastebrot@gmail.com

# git command aliases.

[alias]
    # email (<project>/.git/config).
    github = config user.email \"hastebrot@gmail.com\"
    canoo = config user.email \"benjamin.gudehus@canoo.com\"
    email = config user.email

    # log.
    ll = log --pretty=format:'%Cred%h%Creset  %Cgreen(%ar)  %C(bold blue)<%an>%Creset  %C(yellow)%d%Creset %s' --abbrev-commit
    lg = log --all --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' --abbrev-commit
    l = log --oneline -20
    ls = log --stat
    head = !git lg -1
    h = !git head

    graph = log --pretty=oneline --abbrev-commit --graph --decorate --all
    last = show -p master
    lastr = show -p origin/master
    stat = diff master..HEAD --stat

    # actions.
    s = status
    st = status -s
    uno = status -uno

    b = for-each-ref --sort=committerdate refs/heads/ --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'
    br = branch
    ba = branch -avv
    r = remote --verbose

    bn = rev-parse --abbrev-ref HEAD
    bns = !git bn | cut -d "/" -f1 # sed "s/\/.*//"

    aa = add --all
    ci = commit
    cin = commit
    co = checkout
    cout = checkout
    cip = commit --patch
    amend = commit --amend

    di = diff
    dc = diff --cached
    ds = diff --stat=160,120
    dh1 = diff HEAD~1

    tg = tag -a
    pu = push --tags
    un = reset --hard HEAD
    uh = reset --hard HEAD^

    out = log --pretty=oneline --abbrev-commit --graph @{u}..
    in = !git fetch && git log --pretty=oneline --abbrev-commit --graph ..@{u}

    # more actions.
    ff = merge --ff-only
    pl = pull --ff-only
    pullff = pull --ff-only
    noff = merge --no-ff
    fa = fetch --all

    # fetch, merge, or push master branch.
    fom = fetch origin master
    mom = merge master origin/master
    pom = push origin master
    fopm = fetch parent master
    mopm = merge master parent/master
    popm = push parent master

    # stash and reset.
    ww = log --grep="(wip)" --format=email
    wip = commit -am "(wip)"
    unwip = reset HEAD~1
    unstage = reset HEAD --
    failsafe = branch failsafe
    unfailsafe = branch -D failsafe
    dsf = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git diff --color \"$@\" | diff-so-fancy  | less --tabs=4 -RFX; }; f"
    commits = rev-list HEAD...origin/master --oneline

    # git town commands.
    append = town append
    hack = town hack
    kill = town kill
    new-pull-request = town new-pull-request
    prepend = town prepend
    prune-branches = town prune-branches
    rename-branch = town rename-branch
    repo = town repo
    ship = town ship
    sync = town sync

# git push config.

[push]
    default = current

[core]
    autocrlf = input
    pager = diff-so-fancy | less --tabs=4 -RFX
[commit]
    verbose = true
[status]
    short = false
    branch = true

[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
